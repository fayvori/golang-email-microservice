default:
  image: golang:$GOLANG_VERSION
  interruptible: false

variables:
  GOLANG_VERSION: 1.18.9
  CI_REGISTRY_IMAGE: fayvori/mail-service

stages:
  - update_helm_image_tag
  - lint
  - test
  - build

lint:
  stage: lint
  image: golangci/golangci-lint
  before_script:
    - go mod tidy
  script:
    - make lint && echo "No errors"
  tags:
    - build
    - go-email
    - docker

test:
  stage: test
  script:
    - CONFIG=$CONFIG make tests
  services:
    - name: postgres:13-alpine
      pull_policy: [always, if-not-present]
      alias: postgres-db

    - name: rabbitmq:3.12
      pull_policy: [always, if-not-present]
      alias: rabbitmq
  variables:
    POSTGRES_USER: root
    POSTGRES_PASSWORD: postgres
    BACKEND_POSTGRES_HOST: postgres-db
    POSTGRES_DB: mails_db
  tags:
    - build
    - go-email
    - docker

build:
  stage: build
  image: docker:latest
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -f ./build/package/Dockerfile --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_MESSAGE
  tags:
    - build
    - docker

update_tag:
  stage: update_helm_image_tag
  image: fayvori/helm_image_updater:1.0
  before_script:
    - git remote set-url origin https://fayvori:glpat-9Gg3ms2yvLxudDV5qW-k@gitlab.com/fayvori/gitlab-gomail-ops.git
      # Configure git user
    - git config --global user.name "Ignat Belousov"
    - git config --global user.email "ignat.belousov2000@yahoo.com"
    # Reset to remote main branch
    - git fetch
    - git switch main
    - git reset --hard origin/main
  script:
    - helm-tag-updater -t $CI_COMMIT_MESSAGE -p -f $(pwd)/email-service/values.yaml
    - git add .
    - git commit -m "CI Deploy $CI_COMMIT_MESSAGE"
    - git push -o ci.skip origin HEAD:main
  only:
    - main
