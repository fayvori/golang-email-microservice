default:
  image: golang:$GOLANG_VERSION
  interruptible: false

variables:
  GOLANG_VERSION: 1.18.9
  CI_REGISTRY_IMAGE: fayvori/mail-service

stages:
  - build
  - test
  - lint
  - update_helm_image_tag

lint:
  stage: lint
  image: golangci/golangci-lint
  before_script:
    - go mod tidy
  script:
    - make lint
  tags:
    - build
    - go-email
    - docker

test:
  stage: test
  script:
    - CONFIG=$CONFIG make tests
  services:
    - name: postgres:13-alpine
      pull_policy: if-not-present

    - name: rabbitmq:3.12
      pull_policy: if-not-present
  tags:
    - build
    - go-email
    - docker

build:
  stage: build
  image: docker:latest
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -f ./build/package/Dockerfile --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  tags:
    - build
    - docker

# Send notification to the telegram channel for approving
update_tag:
  stage: update_helm_image_tag
  image: mikefarah/yq
  script:
    - echo "Update tag"
  rules:
    - if: $CI_COMMIT_BRANCH !~ "main"
      when: never
